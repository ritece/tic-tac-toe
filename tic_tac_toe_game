import simplegui
import random

width=300
length=300
text_width=25  #this decides the width of the 0 and X to be drawn 
l=[]           #to contain choices entered by the users

player=random.randrange(1,3) #to choose a player randomly
winner_decided=False         #winner is not yet decided

cells_occupied=0             #each cell is vacant

print player

for i in range(9):
    l.append(' ')

print l

# generate possible x and y co-ordinates to draw the X and 0
a=width/6  
b=length/6
a_inc=width/3
b_inc=length/3
x_pos=[a,a+a_inc,a+2*a_inc]
y_pos=[b,b+b_inc,b+2*b_inc]


def draw(canvas):
    global l,winner_decided
    #outer frame of the board--------------------
    canvas.draw_line([0,0],[0,width],5,"black")
    canvas.draw_line([0,length],[width,length],5,"black")
    canvas.draw_line([width,length],[width,0],5,"black")
    canvas.draw_line([width,0],[0,0],5,"black")
    #-------------------------------------------
    
    #middle lines---------------------------------
    canvas.draw_line([width/3,0],[width/3,length],5,"black")
    canvas.draw_line([2*(width/3),0],[2*(width/3),length],5,"black")
    canvas.draw_line([0,length/3],[width,length/3],5,"black")
    canvas.draw_line([0,2*(length/3)],[width,2*(length/3)],5,"black")

    #now draw the elements of the list--------------------
    
     
    if not(winner_decided):    
     for i in range(3):
        for j in range(3):
            canvas.draw_text(str(l[i+3*j]),[x_pos[i],y_pos[j]],text_width,"red")
    else:
            canvas.draw_text("Player wins",[100,100],20,"red")
            winner_decided=False
            

def click(pos):
    #check for the cell number where the click happens
    global a,b,l,player,winner_decided,cells_occupied
    
    #choose row number
    i=0
    for limit in x_pos:
        if (limit+a)<pos[0]:
            i+=1
           # print "Row "+str(i)    #if pressed in first column then we only get to see break printed
                                   # but if pressed in second column we see hi and then break.
        else:
           # print "Row "+str(i)
           # print "break"
            break
            
    #choose column number
    j=0
    for limit in y_pos:
        if (limit+b)<pos[1]:
            j+=1
           # print "Column "+str(j)    #if pressed in first column then we only get to see break printed
                                      # but if pressed in second column we see hi and then break.
        else:
           # print "Column "+str(j)
           # print "break"
            break 
            
    cell_number = i+3*j        
    print "final position is "+str(i+3*j)  
    #print "initial "+str(l[cell_number])
    
    #check if cell is already occupied or not
    #put X or 0 only if it is vacant and then give chance to other player
    if not(l[cell_number]=='X' or l[cell_number]=='0'):
                                     cells_occupied+=1
                                     if player==1:
                                               l[cell_number]='X'
                                               player=2
                                     else:
                                               l[cell_number]='0'
                                               player=1
    #print "l is :"+str(l[cell_number])
    #print "final l is :"
    
    #check to see if someone has won the game
    
    #rows checked
    for i in range(0,9,3):
        if (l[i]==l[i+1]==l[i+2]=='0') or (l[i]==l[i+1]==l[i+2]=='X'):
            print "hi"
            winner_decided=True
            
    #columns checked
    for i in range(3):
        if (l[i]==l[i+3]==l[i+6]=='0') or (l[i]==l[i+3]==l[i+6]=='X'):
            print "hi"
            winner_decided=True
            
    #diagonals checked
    if (l[0]==l[4]==l[8]=='0') or (l[0]==l[4]==l[8]=='X'):
        winner_decided=True
    elif (l[2]==l[4]==l[6]=='0') or (l[2]==l[4]==l[6]=='X'):
        winner_decided=True
        
        
    if winner_decided or cells_occupied==9:
        for i in range(9):
            l[i]=" "
        cells_occupied=0    
        #winner_decided=False       
        
        
    print l
   

frame=simplegui.create_frame("tic",width,length)
frame.set_canvas_background("white")
frame.set_mouseclick_handler(click)
frame.set_draw_handler(draw)

frame.start()
